#include "qormpropertymapping.h"

#include <QDebug>

QT_BEGIN_NAMESPACE

QDebug operator<<(QDebug dbg, const QOrmPropertyMapping& propertyMapping)
{
    QDebugStateSaver saver{dbg};

    dbg << "QOrmPropertyMapping(" << propertyMapping.classPropertyName() << " => "
        << propertyMapping.tableFieldName() << ", " << propertyMapping.dataType();

    if (propertyMapping.isAutogenerated())
        dbg << ", autogenerated";

    if (propertyMapping.isObjectId())
        dbg << ", object ID";

    dbg << ")";

    return dbg;
}

class QOrmPropertyMappingPrivate : public QSharedData
{
    friend class QOrmPropertyMapping;

    QOrmPropertyMappingPrivate(const QOrmMetadata& enclosingMetadata,
                               QString classPropertyName,
                               QString tableFieldName,
                               bool isObjectId,
                               bool isAutoGenerated,
                               QVariant::Type dataType)
        : m_enclosingMetadata{enclosingMetadata},
          m_classPropertyName{std::move(classPropertyName)},
          m_tableFieldName{std::move(tableFieldName)},
          m_isObjectId{isObjectId},
          m_isAutogenerated{isAutoGenerated},
          m_dataType{dataType}
    {
    }

    const QOrmMetadata& m_enclosingMetadata;
    QString m_classPropertyName;
    QString m_tableFieldName;
    bool m_isObjectId{false};
    bool m_isAutogenerated{false};
    QVariant::Type m_dataType{QVariant::Invalid};
};

QOrmPropertyMapping::QOrmPropertyMapping(const QOrmMetadata& enclosingMetadata,
                                         QString classPropertyName,
                                         QString tableFieldName,
                                         bool isObjectId,
                                         bool isAutoGenerated,
                                         QVariant::Type dataType)
    : d{new QOrmPropertyMappingPrivate{enclosingMetadata,
                                       classPropertyName,
                                       tableFieldName,
                                       isObjectId,
                                       isAutoGenerated,
                                       dataType}}
{
}

QOrmPropertyMapping::QOrmPropertyMapping(const QOrmPropertyMapping&) = default;

QOrmPropertyMapping::QOrmPropertyMapping(QOrmPropertyMapping&&) = default;

QOrmPropertyMapping::~QOrmPropertyMapping() = default;

QOrmPropertyMapping& QOrmPropertyMapping::operator=(const QOrmPropertyMapping&) = default;

QOrmPropertyMapping& QOrmPropertyMapping::operator=(QOrmPropertyMapping&&) = default;

QString QOrmPropertyMapping::classPropertyName() const
{
    return d->m_classPropertyName;
}

QString QOrmPropertyMapping::tableFieldName() const
{
    return d->m_tableFieldName;
}

bool QOrmPropertyMapping::isObjectId() const
{
    return d->m_isObjectId;
}

bool QOrmPropertyMapping::isAutogenerated() const
{
    return d->m_isAutogenerated;
}

QVariant::Type QOrmPropertyMapping::dataType() const
{
    return d->m_dataType;
}

QT_END_NAMESPACE
